#!/usr/bin/env ruby

def run
  cmd = yield
  puts %x(#{cmd}).chomp
end

def scan
  run do
    "/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport scan"
  end
end

def join(network, password = '')
  require'pry';binding.pry
  unless password
    # TODO: need the stderr?
    password = password_lookup(network)
  end

  run { "networksetup -setairportnetwork en0 #{network} #{password}" }
end

def cycle
  %w[off on].each do |c|
    turn(c)
    sleep 1
  end
end

def turn_on
  turn("on")
end

def turn_off
  turn("off")
end

def password_lookup(network)
  run do
    # %Q{security find-generic-password -ga #{network} 2>&1 | egrep -o "password: .*" | ruby -ne 'next unless $_[/password:/]; puts $_.match(/password: "(.*)"/)[1] | tail -1'}
    %Q{security find-generic-password -ga #{network} 2>&1}
  end
end

def turn(bool)
  run { "networksetup -setairportpower en0 #{bool}" }
end

def main(args)
  args = args.dup
  case args.first
  when /scan/i;then scan
  when /join/i
    args.shift
    network, password = args.shift(2)
    join(network, password)
  when /on/i;then turn_on
  when /off/i;then turn_off
  else
    exit(42)
  end
end

main(ARGV)
