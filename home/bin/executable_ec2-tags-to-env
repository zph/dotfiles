#!/usr/bin/env bash
# Usage: source <(./ec2-tags-to-env)
# Requirements awscli and jq
# Credit: https://github.com/12moons/ec2-tags-env
# TODO:
# - ISSUE: potentially these clobber legitimate and necessary ENV VARS like HOME. Prefix for safety with EC2_*?
# Requires an EC2 Role like:
# {
#     "Version": "2012-10-17",
#     "Statement": [
#         {
#             "Sid": "VisualEditor0",
#             "Effect": "Allow",
#             "Action": [
#                 "ec2:DescribeInstances",
#                 "ec2:DescribeTags"
#             ],
#             "Resource": "*"
#         }
#     ]
# }

set -CEeuo pipefail
IFS=$'\n\t'
shopt -s extdebug

export AWS_REGION="us-east-1"
export AWS_DEFAULT_REGION="us-east-1"

METADATA_URL="http://169.254.169.254/latest/meta-data"

get_tags_by_resource_id(){
  aws ec2 describe-tags --filters "Name=resource-id,Values=$1"
}

get_instance_tags() {
  instance_id=$(curl --silent $METADATA_URL/instance-id)
  get_tags_by_resource_id "$instance_id"
}

get_ami_tags() {
  ami_id=$(curl --silent $METADATA_URL/ami-id)
  get_tags_by_resource_id "$ami_id"
}

tags_to_env() {
  local tags=$1

  for key in $(echo "$tags" | jq -r ".[][].Key"); do
    value=$(echo "$tags" | jq -r ".[][] | select(.Key==\"$key\") | .Value")
    key=$(echo "$key" | tr '-' '_' | tr '[:lower:]' '[:upper:]')
    echo "${key}='$value'"
  done
}

ami_tags=$(get_ami_tags)
instance_tags=$(get_instance_tags)

tags_to_env "$ami_tags"
tags_to_env "$instance_tags"
