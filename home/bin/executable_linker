#!/usr/bin/env ruby
#
require 'optparse'

# Lightweight alternative to homesick.gem

class String
  ENCODING_OPTS = {invalid: :replace, undef: :replace, replace: '', universal_newline: true}
  def remove_non_ascii
    self.encode(Encoding.find('ASCII'), ENCODING_OPTS)
  end

  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def black;          colorize(30) end
  def red;            colorize(31) end
  def green;          colorize(32) end
  def brown;          colorize(33) end
  def blue;           colorize(34) end
  def magenta;        colorize(35) end
  def cyan;           colorize(36) end
  def gray;           colorize(37) end
  def bg_black;       colorize(40) end
  def bg_red;         colorize(41) end
  def bg_green;       colorize(42) end
  def bg_brown;       colorize(43) end
  def bg_blue;        colorize(44) end
  def bg_magenta;     colorize(45) end
  def bg_cyan;        colorize(46) end
  def bg_gray;        colorize(47) end
  def bold;           colorize(1) end
  def reverse_color;  colorize(7) end
end

def run_specs
  require 'minitest/autorun'
  require 'minitest/spec'
  require 'minitest/pride'

  describe '#home_dir' do
    it 'is correct when home var present' do
      ENV['HOME'] = "/Users/tester"
      home_dir.must_equal "/Users/tester"
    end
  end

  describe '#glob' do
    it 'excludes .git/ folders' do
      glob.grep(/\.git$/).must_equal []
    end
  end
end

def link(src, dest, simulate: false)
  if simulate
  else
    FileUtils.ln_s(src, dest)

  end
end

def home_dir(dir: nil)
  dir || ENV['HOME']
end

def glob(dir: nil)
  dir ||= File.join(home_dir, "dotfiles")
  match = File.join(dir, "**", "{*,.*}")
  files = Dir.glob(match)
             .reject { |i| i[/\.git$/]}
end

def main
  opts = {}
  OptionParser.new do |options|
    options.banner = "Usage: commit-msg [options]"

    options.on("-t", "--tests", "Run specs") do |v|
      opts[:tests] = v
    end
  end.parse!

  case
  when opts[:tests]
    run_specs
  else
    check_validity
  end
end

main
