# CAVEATS
# on Linux - delete any lines referencing reattach-to-user-namespace
# on OSX   - run `brew install reattach-to-user-namespace`
# prefix + , = rename-window
set -g prefix C-x
# unbind C-x
# bind-key C-x display 'Prefix is Control-a.'
bind C-x send-prefix
bind C-z send-prefix
bind-key C-x last-window
bind-key C-z next-window
unbind % # Remove default binding since weâ€™re replacing
bind | split-window -h
bind - split-window -v
# Move left and right among windows via <>
bind-key -r < swap-window -t -
bind-key -r > swap-window -t +
# Allow repeats for moving to the next and previous windows, allows me to tap
# # through a list of windows quickly; good for clearing alerts
bind-key -r n next-window
bind-key -r p previous-window

set -g display-panes-time 2500
bind-key f display-panes

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# 2020 - invalid options
# set-option -g pane-border-fg red
# set-option -g pane-border-bg '#222222'

# set-option -g pane-active-border-fg red
# set-option -g pane-active-border-bg colour39

# Readline Configurations
#unbind C-l
#bind C-l send-keys 'C-l'
#unbind C-q
#bind C-q send-keys 'C-q'
#unbind C-f
#bind C-f send-keys 'C-f'
#unbind C-a
#bind C-a send-keys 'C-a'
#unbind C-e
#bind C-e send-keys 'C-e'
#
#unbind M-b
#bind M-b send-keys 'M-b'
#unbind M-f
#bind M-f send-keys 'M-f'
#unbind M-a
#bind M-a send-keys 'M-a'
#unbind M-e
#bind M-e send-keys 'M-e'

# set -g pane-active-border-fg red
#
# Enable mouse support (works in iTerm)
# per Pivotal Labs
# Pre 2.x settings
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
## Post 2.x settings
set -g mouse on
# Credit: https://github.com/tmux/tmux/issues/145#issuecomment-151123624
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# 2020 invalid option
# Highlight active window
# set-window-option -g window-status-current-bg red

# VIM movements
set-window-option -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# VIM Keybind resizing
### Experimental
# Adopted from @twymer's dotfiles
# 5 moves the pane a more appreciable amount
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5
bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R
#######

set -g default-terminal "screen-256color"

# Copy mode
unbind [
bind ` copy-mode
unbind p
bind p paste-buffer
# TODO: fix, this is broken on newer Tmux versions
# bind -t vi-copy v begin-selection
# bind -t vi-copy y copy-selection
########## Adopted from @twymer's dotfiles
# Kill escape key hang that makes vim feel laggy
set -s escape-time 0

# Easy tmux config reload
#unbind r
#bind r \
#  source-file ~/.tmux.conf \;\
#  display 'Reloaded tmux config.'

# Vim mode
#set-option -g status-keys vi
#set-window-option -g mode-keys vi

# Easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
# bind e setw synchronize-panes on
# bind E setw synchronize-panes off

##########
# Vim and Tmux integration
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"
##########
# reminder
# Tmux zoom via prefix z

#set -g history-limit 10000
## open pry in new window
#bind i new-window -n pry "exec pry"
## open a man page in new window
#bind m command-prompt "new-window 'exec man %%'"
###########

#### Nested TMUX
# Credit: http://stahlke.org/dan/tmux-nested/
# bind -n M-F11 set -qg status-bg colour25
# bind -n M-F12 set -qg status-bg colour40
# bind -n S-up \
#   send-keys M-F12 \; \
#   set -qg status-bg colour25 \; \
#   unbind -n S-left \; \
#   unbind -n S-right \; \
#   unbind -n S-C-left \; \
#   unbind -n S-C-right \; \
#   unbind -n C-t \; \
#   set -qg prefix C-b
# bind -n S-down \
#   send-keys M-F11 \; \
#   set -qg status-bg colour40 \; \
  # bind -n S-left  prev \; \
  # bind -n S-right next \; \
  # bind -n S-C-left swap-window -t -1 \; \
  # bind -n S-C-right swap-window -t +1 \; \
  # bind -n C-t new-window -a -c "#{pane_current_path}" \; \
  set -qg prefix C-x


### Pipe pane to log file
#bind-key P pipe-pane -o "cat >>$HOME/tmp/#W-tmux.log" \; display-message "Toggled logging to $HOME/tmp/#W-tmux.log"
## at the end of the file
if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'
if-shell 'test "$(uname)" != "Darwin"' 'source ~/.tmux-linux.conf'

# PLUGINS through TPM
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-logging'

# Configurations
set -g @continuum-restore 'on'
set -g @save-complete-history-path "$HOME/.tmux/logs"
set -g @screen-capture-path "$HOME/.tmux/logs"
set -g @logging-path "$HOME/.tmux/logs"
set -g @plugin 'jbnicolai/tmux-fpp'
# # for vim
# set -g @resurrect-strategy-vim 'session'
# # for neovim
# set -g @resurrect-strategy-nvim 'session'

#bind-key 0 run "tmux split-window -l 12 'bash -ci ftpane'"

set-option -g default-terminal "screen-256color"
run '~/.tmux/plugins/tpm/tpm'

set-option -g default-command /usr/local/bin/fish
set-option -g default-shell /usr/local/bin/fish
